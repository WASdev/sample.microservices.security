//Copyright 2015 IBM Corp.
apply plugin: 'liberty'

ext {
	libertyBaseDir = project.hasProperty('libertyRoot') ? "${libertyRoot}" : "${buildDir}"
	projectLicenseCode = project.hasProperty('libertyLicenseCode') ? "${libertyLicenseCode}" : 'licenseCode'
}

buildscript {
	repositories {
		maven {
			name = 'Sonatype Nexus Snapshots'
			url = 'https://oss.sonatype.org/content/repositories/snapshots/'
		}
		mavenCentral()
	}
	dependencies {
		classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:1.0-SNAPSHOT'
		classpath files('gradle/wlp-anttasks.jar')
	}
}

//Dependencies
repositories { mavenCentral(); }

liberty {
	wlpDir = "${libertyBaseDir}/wlp"
	serverName = 'ApiKeyApplication'
	
	install {
		licenseCode = "${projectLicenseCode}"
		version = '8.5.5_06'
		baseDir = "${libertyBaseDir}"
		cacheDir = "${buildDir}/cache"
	}
	
	packageLiberty {
		include = 'usr'
		archive = "${buildDir}/ApiKeyApplication.zip"
	}
	
}

// Copy server into the local usr dir
task publishServer(type: Copy) {
    from("./servers")
    into("${libertyBaseDir}/wlp/usr/servers")
}


// Copy WAR into the local usr dir
task publishWar(dependsOn:'publishServer', type: Copy) {
    from("${project(':apikey-rp-application').buildDir}/libs/apikey-rp-application.war")
    into("${libertyBaseDir}/wlp/usr/servers/ApiKeyApplication/dropins")
}


// If both license code and Liberty root are set then install liberty using liberty-gradle plugin
if(project.hasProperty('libertyLicenseCode')) {
	println "Using liberty-gradle plugin to install Liberty to location ${libertyBaseDir}"
	libertyPackage.dependsOn(['installLiberty','publishWar'])
// If only Liberty root is set then we are using a local version
} else if(!project.hasProperty('libertyLicenseCode') && file("${libertyBaseDir}/wlp/lib/ws-launch.jar").exists()) {
	println "Using local Liberty install located at ${libertyBaseDir} to package server"
	libertyPackage.dependsOn('publishWar')
// If neither license code or Liberty root are set skip steps that require a server
} else {
	println '**********************************************************'
	println 'No liberty install specified ! : Skipping packaging server'
	println '**********************************************************'
}
